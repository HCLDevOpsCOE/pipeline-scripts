-   name: Create security group
    ec2_group:
        name: "{{ security_group_name }}_security_group"
        description: "{{ security_group_name }} security group"
        region: "{{ aws_region }}"
        rules:
            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 80
              to_port: 80
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 443
              to_port: 443
              cidr_ip: 0.0.0.0/0
        rules_egress:
            - proto: all
              cidr_ip: 0.0.0.0/0
    register: basic_firewall

-   name: Create an EC2 key
    ec2_key:
        name: "{{ ec2_private_key }}-key"
        region: "{{ aws_region }}"
    register: ec2_key

-   name: save private key
    copy: content={{ ec2_key.key.private_key }}  dest={{ playbook_dir }}/{{ ec2_private_key }}-key.pem mode=0400
    when: ec2_key.changed

-   name: Create an EC2 instance
    ec2:
        key_name: "{{ ec2_private_key }}-key"
        region: "{{ aws_region }}"
        group_id: "{{ basic_firewall.group_id }}"
        instance_type: "{{ instance_type }}"
        image: "{{ ami }}"
        wait: yes
        instance_tags: '{"Name":"{{ec2_tag_Name}}","Type":"{{ec2_tag_Type}}","Environment":"{{ec2_tag_Environment}}"}'
        count: 1
    register: ec2

-   name: Wait for the instances to boot by checking the ssh port
    wait_for: host={{item.public_ip}} port=22 delay=60 timeout=320 state=started
    with_items: "{{ec2.instances}}"

-   name: Create a file to store IP and connection details
    file: path={{ playbook_dir }}/{{ ec2_tag_Name }} state=touch
    with_items: "{{ec2.instances}}"

-   name: save instance IP and connection details to file under playbook directory
    blockinfile:
        dest: "{{ playbook_dir }}/{{ ec2_tag_Name }}"
        block: |
         AWS Instance Public IP - {{ item.public_ip }}
         AWS Public DNS name - {{ item.public_dns_name }}
         AWS Instance ID - {{ item.id }}
         ##Connecting to ec2 instance##
         For ubuntu:  ssh -i "{{ ec2_private_key }}-key.pem" ubuntu@{{ item.public_dns_name }}    or
                      ssh -i "{{ ec2_private_key }}-key.pem" root@{{ item.public_dns_name }}
         For centos:  ssh -i "{{ ec2_private_key }}-key.pem" centos@{{ item.public_dns_name }}     or
                      ssh -i "{{ ec2_private_key }}-key.pem" root@{{ item.public_dns_name }}
    with_items: "{{ec2.instances}}"

-   name: accept new ssh fingerprints
    shell: ssh-keyscan -H {{ item.public_ip }} >> ~/.ssh/known_hosts
    with_items: "{{ec2.instances}}"

-   name: Add IP to ec2_hosts group
    local_action: add_host hostname={{ item.public_ip }} groupname=ec2_hosts
    with_items: "{{ec2.instances}}"


